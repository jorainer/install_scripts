* Installing ArchLabs

** Installation

To update/sync the repos: =pacman -Sy=.
Generally, use =pacman -Ss <pkgname>= to search for a package, it is also possible
to search using =pkgfile <file within package>=.

+ Setup the system using: =sudo ./archlinux-install.sh=.
+ To install additional stuff from AUR use =./archlinux-install-aur.sh=. This
  needs user interaction and *should not* be run as su.
+ Set up the zsh: =./zsh-config.sh=.
+ Install perl: =./arch-install-perl.sh=. After installation finished exit the
  shell so the installation completes (somehow gets stuck). To make the new perl
  default use =perlbrew list= and =perlbrew switch= to switch.
+ Install all gits: =./install-gits.sh=.
+ Set up all paths and environment variables in =~/.zshrc=:
  #+BEGIN_EXAMPLE
    ## Alias
    alias mc="mc --nosubshell"
  #+END_EXAMPLE

*** Emacs

Install settings using /https://github.com/jorainer/memacs/. After that, copy the
/linux.emacs/ file to the home dir and all should be fine.

*** MySQL setup

1) Install databases: =sudo mysql_install_db --user=mysql --basedir=/usr
   --datadir=/var/lib/mysql=.
2) Start database: =sudo /usr/bin/mysqld_safe &=.
3) Set root password etc =/usr/bin/mysql_secure_installation=.
4) Add user: =create user 'jo'@'localhost' identified by '<pass>';= and grant
   privileges: =grant all privileges on *.* to 'jo'@'localhost';=.

*** DEPRECATED VMware

We will need the =unlocker= tool from DrDonk (cloned from github):
=https://github.com/DrDonk/unlocker=. Best is to download a release directly
from github instead of cloning. If a version was already installed uninstall
that first! Follow the instructions in the github repo!

To enable the vmware services (at boot) we have to do:

#+BEGIN_EXAMPLE
  sudo systemctl enable vmware-networks.service
  sudo systemctl enable vmware-usbarbitrator.service
#+END_EXAMPLE

To just start them use =start= instead of =enable=.

To create a new macOS virtual machine:
- create the virtual machine in macOS (or in linux, if the installer app is
  converted to an iso).
- copy it over to linux.
- edit the =vmx= file by adding =smc.version = "0"=.
- Increase the disk size inside macOS using: =sudo diskutil resizeVolume / R=.
- Install VMWare tools in the virtual machine: attach the iso image that can be
  found at =/usr/lib/vmware/isoimages= to the virtual machine (=darwin.iso= for
  macOS). These tools are updated with the =lnx-update-tools.sh= script of the
  =unlocker= repo. Eventually the tools have to be installed twice.
- Seems it is required to start =vmplayer= with sudo.

*** DEPRECATED Qemu

To install macOS on linux: https://github.com/sickcodes/Docker-OSX . Best
to install with the selected docker, then copy the created image to another
folder and run it with the naked docker image. Ideally, create also the
keys and IDs once and pass them as environment variables.

Other settings (tune OSX): https://github.com/sickcodes/osx-optimizer
Maybe some other infos: https://github.com/kholia/OSX-KVM

This seems to be important to allow use of iCloud etc. Check the serial number
in OSX with =ioreg -l | grep IOPlatformSerialNumber=.

To enable retina/HiDPI in macOS: =sudo defaults write
/Library/Preferences/com.apple.windowserver DisplayResolutionEnabled -bool
true=.

**** Issues with updated kernel

Running the Monterey image on kernel 5.17.9-arch1-1 works:

```
Linux rocinante 5.17.9-arch1-1 #1 SMP PREEMPT Wed, 18 May 2022 17:30:11 +0000 x86_64 GNU/Linux
:0
[sudo] password for jo: 
1
NAME="ArchLabs"
PRETTY_NAME="ArchLabs Linux"
Filesystem      Size  Used Avail Use% Mounted on
/dev/nvme0n1p2  1.8T  1.6T  174G  90% /
QEMU emulator version 7.0.0
Copyright (c) 2003-2022 Fabrice Bellard and the QEMU Project developers
libvirtd (libvirt) 8.4.0
               total        used        free      shared  buff/cache   available
Mem:            62Gi       2.9Gi        52Gi       845Mi       6.7Gi        58Gi
Swap:           62Gi          0B        62Gi
8
16
crw-rw-rw- 1 root kvm 10, 232 Jun 28 16:43 /dev/kvm
total 0
drwxrwxrwt  2 root root  100 Jun 28 16:40 .
drwxrwxrwt 18 root root  400 Jun 28 16:43 ..
srwxrwxrwx  1 jo   users   0 Jun 28 16:40 X0
srwxr-xr-x  1 gdm  gdm     0 Jun 28 16:40 X1024
srwxr-xr-x  1 gdm  gdm     0 Jun 28 16:40 X1025
root         513  0.1  0.1 1742708 70924 ?       Ssl  16:40   0:00 /usr/bin/dockerd -H fd://
jo          5259  0.0  0.0   6684  2592 pts/2    S+   16:44   0:00 grep --color=auto dockerd
kvm:x:992:libvirt-qemu,qemu,jo
libvirt:x:970:jo
libvirt-qemu:x:964:
docker:x:959:jo
```

Running the Monterey image on kernel 5.18.7-arch1-1:

```
Linux rocinante 5.18.7-arch1-1 #1 SMP PREEMPT_DYNAMIC Sat, 25 Jun 2022 20:22:01 +0000 x86_64 GNU/Linux
:0
[sudo] password for jo: 
1
NAME="ArchLabs"
PRETTY_NAME="ArchLabs Linux"
Filesystem      Size  Used Avail Use% Mounted on
/dev/nvme0n1p2  1.8T  1.6T  172G  91% /
QEMU emulator version 7.0.0
Copyright (c) 2003-2022 Fabrice Bellard and the QEMU Project developers
libvirtd (libvirt) 8.4.0
               total        used        free      shared  buff/cache   available
Mem:            62Gi       2.4Gi        58Gi       531Mi       1.7Gi        59Gi
Swap:           62Gi          0B        62Gi
8
16
crw-rw-rw- 1 root kvm 10, 232 Jun 28 16:54 /dev/kvm
total 0
drwxrwxrwt  2 root root  100 Jun 28 16:55 .
drwxrwxrwt 15 root root  340 Jun 28 16:57 ..
srwxrwxrwx  1 jo   users   0 Jun 28 16:55 X0
srwxr-xr-x  1 gdm  gdm     0 Jun 28 16:55 X1024
srwxr-xr-x  1 gdm  gdm     0 Jun 28 16:55 X1025
root         501  0.1  0.1 1816364 73104 ?       Ssl  16:54   0:00 /usr/bin/dockerd -H fd://
jo          3143  0.0  0.0   6684  2648 pts/2    S+   16:57   0:00 grep --color=auto dockerd
kvm:x:992:libvirt-qemu,qemu,jo
libvirt:x:970:jo
libvirt-qemu:x:964:
docker:x:959:jo

```

```
+ exec qemu-system-x86_64 -m 4000 -cpu Penryn,vendor=GenuineIntel,+invtsc,vmware-cpuid-freq=on,+ssse3,+sse4.2,+popcnt,+avx,+aes,+xsave,+xsaveopt,check, -machine q35,accel=kvm:tcg -smp 4,cores=4 -usb -device usb-kbd -device usb-tablet -device 'isa-applesmc,osk=ourhardworkbythesewordsguardedpleasedontsteal(c)AppleComputerInc' -drive if=pflash,format=raw,readonly=on,file=/home/arch/OSX-KVM/OVMF_CODE.fd -drive if=pflash,format=raw,file=/home/arch/OSX-KVM/OVMF_VARS-1024x768.fd -smbios type=2 -audiodev alsa,id=hda -device ich9-intel-hda -device hda-duplex,audiodev=hda -device ich9-ahci,id=sata -drive id=OpenCoreBoot,if=none,snapshot=on,format=qcow2,file=/home/arch/OSX-KVM/OpenCore/OpenCore.qcow2 -device ide-hd,bus=sata.2,drive=OpenCoreBoot -device ide-hd,bus=sata.3,drive=InstallMedia -drive id=InstallMedia,if=none,file=/home/arch/OSX-KVM/BaseSystem.img,format=qcow2 -drive id=MacHDD,if=none,file=/home/arch/OSX-KVM/mac_hdd_ng.img,format=qcow2 -device ide-hd,bus=sata.4,drive=MacHDD -netdev user,id=net0,hostfwd=tcp::10022-:22,hostfwd=tcp::5900-:5900, -device vmxnet3,netdev=net0,id=net0,mac=52:54:00:09:49:17 -monitor stdio -boot menu=on -vga vmware
qemu-system-x86_64: warning: dbind: Couldn't connect to accessibility bus: Failed to connect to socket /run/user/1000/at-spi/bus_0: No such file or directory
QEMU 6.2.0 monitor - type 'help' for more information
(qemu) ALSA lib confmisc.c:855:(parse_card) cannot find card '0'
ALSA lib conf.c:5178:(_snd_config_evaluate) function snd_func_card_inum returned error: No such file or directory
ALSA lib confmisc.c:422:(snd_func_concat) error evaluating strings
ALSA lib conf.c:5178:(_snd_config_evaluate) function snd_func_concat returned error: No such file or directory
ALSA lib confmisc.c:1334:(snd_func_refer) error evaluating name
ALSA lib conf.c:5178:(_snd_config_evaluate) function snd_func_refer returned error: No such file or directory
ALSA lib conf.c:5701:(snd_config_expand) Evaluate error: No such file or directory
ALSA lib pcm.c:2664:(snd_pcm_open_noupdate) Unknown PCM default
alsa: Could not initialize DAC
alsa: Failed to open `default':
alsa: Reason: No such file or directory
ALSA lib confmisc.c:855:(parse_card) cannot find card '0'
ALSA lib conf.c:5178:(_snd_config_evaluate) function snd_func_card_inum returned error: No such file or directory
ALSA lib confmisc.c:422:(snd_func_concat) error evaluating strings
ALSA lib conf.c:5178:(_snd_config_evaluate) function snd_func_concat returned error: No such file or directory
ALSA lib confmisc.c:1334:(snd_func_refer) error evaluating name
ALSA lib conf.c:5178:(_snd_config_evaluate) function snd_func_refer returned error: No such file or directory
ALSA lib conf.c:5701:(snd_config_expand) Evaluate error: No such file or directory
ALSA lib pcm.c:2664:(snd_pcm_open_noupdate) Unknown PCM default
alsa: Could not initialize DAC
alsa: Failed to open `default':
alsa: Reason: No such file or directory
audio: Failed to create voice `dac'
ALSA lib confmisc.c:855:(parse_card) cannot find card '0'
ALSA lib conf.c:5178:(_snd_config_evaluate) function snd_func_card_inum returned error: No such file or directory
ALSA lib confmisc.c:422:(snd_func_concat) error evaluating strings
ALSA lib conf.c:5178:(_snd_config_evaluate) function snd_func_concat returned error: No such file or directory
ALSA lib confmisc.c:1334:(snd_func_refer) error evaluating name
ALSA lib conf.c:5178:(_snd_config_evaluate) function snd_func_refer returned error: No such file or directory
ALSA lib conf.c:5701:(snd_config_expand) Evaluate error: No such file or directory
ALSA lib pcm.c:2664:(snd_pcm_open_noupdate) Unknown PCM default
alsa: Could not initialize ADC
alsa: Failed to open `default':
alsa: Reason: No such file or directory
ALSA lib confmisc.c:855:(parse_card) cannot find card '0'
ALSA lib conf.c:5178:(_snd_config_evaluate) function snd_func_card_inum returned error: No such file or directory
ALSA lib confmisc.c:422:(snd_func_concat) error evaluating strings
ALSA lib conf.c:5178:(_snd_config_evaluate) function snd_func_concat returned error: No such file or directory
ALSA lib confmisc.c:1334:(snd_func_refer) error evaluating name
ALSA lib conf.c:5178:(_snd_config_evaluate) function snd_func_refer returned error: No such file or directory
ALSA lib conf.c:5701:(snd_config_expand) Evaluate error: No such file or directory
ALSA lib pcm.c:2664:(snd_pcm_open_noupdate) Unknown PCM default
alsa: Could not initialize ADC
alsa: Failed to open `default':
alsa: Reason: No such file or directory
audio: Failed to create voice `adc'
```

*** PREFERRED virtualization: KVM/virt-manager

https://www.howtoforge.com/how-to-install-kvm-qemu-on-manjaro-archlinux/

*** Access to iCloud and apple notes etc

A convenient tool is icloud-for-linux that can be installed from snap. Source
code repo is here:
https://github.com/cross-platform/icloud-for-linux. Installation instructions
are here: https://github.com/cross-platform/icloud-for-linux.

** Search/install additional stuff

https://aur.archlinux.org/packages

** Customization and setup

Most of the customization are for the openbox window manager.

*** Themes

Get Openbox themes from here: https://github.com/addy-dclxvi/openbox-theme-collections

Copy the content to the ~/.themes folder (without the .git folder).
Then use Obconf or LX Appearance to apply theme.

Get GTK-themes from here: https://github.com/addy-dclxvi/gtk-theme-collections

Copy them to the ~/.themes folder and use Xfce4 Settings Apperance
or LC Appearence to set.

Get tint2 (panel) themes from here:
https://github.com/addy-dclxvi/tint2-theme-collections and copy them to the
~/.config/tint2 folder. To activate: =tint2 -c
~/.config/tint2/livia/livia.tint2rc= to enable on openbox startup put that
command to the openbox autostart file (with a trailing =&=).

*** Zsh

Presto modules, edit =.zpreztorc=:
#+BEGIN_EXAMPLE
  # Set the Prezto modules to load (browse modules).
  # The order matters.
  zstyle ':prezto:load' pmodule \
    'environment' \
    'terminal' \
    'editor' \
    'history' \
    'directory' \
    'spectrum' \
    'utility' \
    'completion' \
    'git' \
    'syntax-highlighting' \
    'prompt'
#+END_EXAMPLE

*** General stuff

To increase the size of the =/tmp= directory: edit =/etc/fstab=:
#+BEGIN_EXAMPLE
  tmpfs	/tmp	tmpfs	rw,nodev,nosuid,size=4G	0 0
#+END_EXAMPLE

*** Useful shortcuts:

+ Disable =C-space=: edit =~/.config/openbox/rc.xml, search for /C-space/ and
  comment it out.
+ Add shortcut for desktop switching:
  #+BEGIN_EXAMPLE
    <keybind key="W-A-Left">
      <action name="GoToDesktop">
	<to>left</to>
	<wrap>no</wrap>
      </action>
    </keybind>
    <keybind key="W-A-Right">
      <action name="GoToDesktop">
	<to>right</to>
	<wrap>no</wrap>
      </action>
    </keybind>
  #+END_EXAMPLE

+ =W-1=: go to desktop 1 (same for 2...).
+ =W-f=: open file manager.
+ =W-t=: open terminal.
+ =W-W=: open program list.
+ =W-space=: open menu.
+ =W+Left=: left maximize.
+ =W+Right=: right maximize.
+ =A-r=: resize window using arrow keys and hit enter when done.
+ =A-space=: show menu.

*** Retina display/HIDPI

To set HIDPI etc:
https://wiki.archlinux.org/title/HiDPI

1) =.Xresources=:

#+BEGIN_EXAMPLE
Xft.dpi: 160
Xft.autohint: 0
Xft.lcdfilter: lcddefault
Xft.hintstyle: hintfull
Xft.hinting: 1
Xft.antialias: 1
Xft.rgba: rgb
#+END_EXAMPLE
   
2) Go to Xfce4 settings manager, Appearance, Fonts and edit /Custom DPI setting/ (160).
3) Increase font size in =.config/jgmenu/jgmenurc=.

*** Encrypted folders

Folders can be encrypted using =ecryptfs=. To set-up a folder for encryption use
for example:

#+BEGIN_EXAMPLE
  sudo mount -t ecryptfs /home/jo/crypt/EURACrypt2018 /home/jo/crypt/EURACrypt2018
#+END_EXAMPLE

Files can then be copied into the folder and once it is unmounted everything
(except filenames) is encrypted. Note that info on encryption is stored in
root's home!

*** External displays

**** Multi-monitor setup

Simply use =arandr= to define the setup.

**** Screen mirroring with different resolution


Info: eDPI (internal screen) resolution 2256x1504

A: using =mons=. Set primary screen to external, then enable mirroring. To /restore/
the original config: need to log out and log in again.

B: =xrandr --output HDMI2 --auto --scale-from 2256x1504 --output eDP1=
https://superuser.com/questions/1243205/how-to-mirror-a-display-with-different-resolutions

https://unix.stackexchange.com/questions/101490/mirror-dual-monitors-with-different-resolutions

*** hibernation

https://wiki.archlinux.org/title/Power_management/Suspend_and_hibernate#Hibernation

eventually also:
https://gist.github.com/klingtnet/c972b8182e4e2818d6d551b0cbeac44b , but that's
less detailed.

to hibernate: systemctl hibernate

** Useful commands

- =pacman -Ss <pkgname>=: search for a package.
- =pkgfile <file in package>=: search for a file within a package.
- =pacman -S <pkgname>=: install package.
- =pacman -Sy=: sync package databases.
- =checkupdates=: check updates.
- =pacman -Su=: update.
- =pacman --ignore ignoredpkg,ignoredpkg2=: ignore updates for certain packages.
- =pacman -Rs removepkg=: remove package and all dependencies (not required by others).

** Downgrading packages

Downgrade packages with =pacman -U /var/cache/pacman/pkg/<pkg name>=.

** Downgrading kernel

go to /var/cache/pacman/pkg and downgrade the linux using

#+BEGIN_EXAMPLE
pacman -U file://linux-4.15.8-1-x86_64.pkg.tar.xz
file://linux-headers-4.15.8-1-x86_64.pkg.tar.xz file://virtualbox-host-modules-arch-5.2.8-4-x86_64.pkg.tar.xz
#+END_EXAMPLE

** Unsorted issues

*** PGP signature update

Sometimes package fail to install because of outdated PGP signature. Solution:

#+BEGIN_EXAMPLE
sudo pacman-key --init && sudo pacman-key --populate
sudo pacman-key --refresh-keys
sudo pacman -Sy archlinux-keyring
sudo pacman -Sy archlabs-keyring
#+END_EXAMPLE


** =plexmediaplayer= problem with QT > 5.10.0

There seems to be an issue with =plexmediaplayer= and qt > 5.10.0, i.e. plex is
stuck during startup and creates a huge log file crying that the opengl
implementation is not supported. The solution seems to be to specifically
downgrade qt to an older version and re-build the plex binary.

#+BEGIN_EXAMPLE
  sudo pacman -U /var/cache/pacman/pkg/qt5-base-5.10.1-8-x86_64.pkg.tar.xz
  sudo pacman -U /var/cache/pacman/pkg/qt5-declarative-5.10.1-4-x86_64.pkg.tar.xz
  sudo pacman -U /var/cache/pacman/pkg/qt5-location-5.10.1-2-x86_64.pkg.tar.xz
  sudo pacman -U /var/cache/pacman/pkg/qt5-multimedia-5.10.1-1-x86_64.pkg.tar.xz
  sudo pacman -U /var/cache/pacman/pkg/qt5-quickcontrols-5.10.1-1-x86_64.pkg.tar.xz
  sudo pacman -U /var/cache/pacman/pkg/qt5-script-5.10.1-1-x86_64.pkg.tar.xz
  sudo pacman -U /var/cache/pacman/pkg/qt5-sensors-5.10.1-1-x86_64.pkg.tar.xz
  sudo pacman -U /var/cache/pacman/pkg/qt5-speech-5.10.1-1-x86_64.pkg.tar.xz
  sudo pacman -U /var/cache/pacman/pkg/qt5-svg-5.10.1-1-x86_64.pkg.tar.xz
  sudo pacman -U /var/cache/pacman/pkg/qt5-webchannel-5.10.1-1-x86_64.pkg.tar.xz
  sudo pacman -U /var/cache/pacman/pkg/qt5-webengine-5.10.1-1-x86_64.pkg.tar.xz
  sudo pacman -U /var/cache/pacman/pkg/qt5-x11extras-5.10.1-1-x86_64.pkg.tar.xz
  sudo pacman -U /var/cache/pacman/pkg/qt5-xmlpatterns-5.10.1-1-x86_64.pkg.tar.xz
#+END_EXAMPLE
