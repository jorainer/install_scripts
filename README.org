#+TITLE:Homebrew and R installation scripts
#+AUTHOR: Johannes Rainer
#+email: johannes.rainer@i-med.ac.at
#+OPTIONS: ^:{}
#+INFOJS_OPT:
#+PROPERTY: exports code
#+PROPERTY: session *R*
#+PROPERTY: noweb yes
#+PROPERTY: results output
#+PROPERTY: tangle yes
#+STARTUP: overview
#+INFOJS_OPT: view:t toc:t ltoc:t mouse:underline buttons:0 path:http://thomasf.github.io/solarized-css/org-info.min.js
#+HTML_HEAD: <link rel='stylesheet' type='text/css' href='http://thomasf.github.io/solarized-css/solarized-light.min.css' />
#+LATEX_HEADER: \usepackage[backend=bibtex,style=chem-rsc,hyperref=true]{biblatex}
#+LATEX_HEADER: \usepackage{parskip}
#+LATEX_HEADER: \setlength{\textwidth}{17.0cm}
#+LATEX_HEADER: \setlength{\hoffset}{-2.5cm}
#+LATEX_HEADER: \setlength{\textheight}{22cm}
#+LATEX_HEADER: \setlength{\voffset}{-1.5cm}
#+LATEX_HEADER: \addbibresource{~/Documents/Unison/bib/references.bib}
#+LATEX_HEADER: \usepackage{verbatim}
#+LATEX_HEADER: \usepackage{inconsolata}
#+LATEX_HEADER: \definecolor{lightgrey}{gray}{0.97}
#+LATEX_HEADER: \definecolor{solarizedlightbg}{HTML}{FCF4DC}
#+LATEX_HEADER: \makeatletter
#+LATEX_HEADER: \def\verbatim@font{\scriptsize\ttfamily}
#+LATEX_HEADER: \makeatother
#+FILETAGS: :work:project:
#+CATEGORY: instscript
-----

* Some unsorted installation scripts and descriptions

This package contains useful scripts that ease the installation of certain, frequently used but less often installed, tools and environments and also descriptions for less complicated things.

** Overview

Below we just list all the scripts and files.
+ =brew-jo-strong.sh=: installation of /homebrew/ on Mac OS X systems (Section [[section.homebrew]]).
+ =gitinstall.sh=: installation of additional =R= packages from our git repository and from github (Section [[section.ourpackages]]).
+ =install-R-release.sh=: script to download, compile and install =R= on Mac OS X (Section [[section.r]]).
+ =installBioC.R=: =R= script to install a pre-defined set of Bioconductor package for the analysis of biological data (Section [[section.bioconductor]]).
+ =packages.txt=: text file listing all Bioconductor and =R= packages to be installed by the above script (Section [[section.bioconductor]]).
+ =local_r_repo/mirrror.pl=: =perl= script to mirror Bioconductor or CRAN (Section [[section.mirrror]]).

** Installation of Homebrew and R

This package provides (shell) scripts to install and set up Homebrew (http://brew.sh/) on Mac OS X and to install R (http://www.r-project.org).


*** Installation of homebrew<<section.homebrew>>

Homebrew provides libraries and packages that Apple does not, i.e. it allows to install additional compilers, development packages or (open source) software on Mac operating system (similar to /fink/ or /macports/). From personal experience, I always had the least problems (i.e. missing libraries) with homebrew and installation of =R= and =Bioconductor=.

Homebrew should be installed using the default way:

#+BEGIN_EXAMPLE
  ruby -e "$(curl -fsSL https://raw.github.com/mxcl/homebrew/go/install)"
#+END_EXAMPLE

followed by

#+BEGIN_EXAMPLE
  brew doctor
#+END_EXAMPLE

To check for any potential problems (i.e. missing Xquartz, potentially conflicting compilers/software).
Also, it is recommended to update using

#+BEGIN_EXAMPLE
  brew update
  brew upgrade
#+END_EXAMPLE

In case you have macports (http://www.macports.org) installed, you should remove it from your system (see https://guide.macports.org/chunked/installing.macports.uninstalling.html for a guide how to remove macports).

Once that's done you can install required packages for R/Bioconductor (including perl, fortran, Bioperl etc) calling:

#+BEGIN_EXAMPLE
  ./brew-jo-strong.sh
#+END_EXAMPLE

**** Homebrew and OS X 10.10 beta:

Not unexpectedly we run into some problems here. =gfortran= seems to have incorporated into a =gcc= bottle, but this does not compile. Based on the suggestion found on https://github.com/Homebrew/homebrew-versions/issues/450, I've edited the =gcc= bottle: =brew edit gcc= and add:

#+BEGIN_EXAMPLE
  patch do
      url "https://gcc.gnu.org/bugzilla/attachment.cgi?id=33180"
      sha1 "def0cb036a255175db86f106e2bb9dd66d19b702"
  end
#+END_EXAMPLE


*** Installation of R<<section.r>>

The script =install-R-release.sh= will download and install the R-version submitted as a parameter to the script.

By default the script will install R into =/Users/jo/R=. This can be changed by editing the appropriate line in the =install-R-release.sh= script.

The example below downloads and installs R version 3.1.0:

#+BEGIN_EXAMPLE
  ./install-R-release.sh 3.1.0
#+END_EXAMPLE


*** Installation of pre-defined Bioconductor and additional packages<<section.bioconductor>>

In addition, a pre-defined set of packages from the Bioconductor (http://www.bioconductor.org) can be installed using the scripts below.
The list of packages is provided by the =packages.txt= file. It constitutes of default core Bioconductor packages, but also additional packages we frequently used or are using.
To install these packages, install =R= inside of the folder where both the =installBioC.R= and the =packages.txt= files reside and call =source( "installBioC.R" )= in =R=.
It usually takes some time to install all packages, so be patient. Also, it is suggested to check the warnings after the script finished (i.e. with =warnings()=) to check whether all packages have been installed properly.

**** Installation of our R packages from git<<section.ourpackages>>

In addition, some of our packages can be automatically fetched and installed from git.

It should be pretty straightforward and on most systems it is sufficient to just call =./gitinstall.sh= which installs the packages for the current R-version bound to =R=. If you want to install the packages for another installed R-version you can change the path to that version inside the script.

If git is complaining because of a self-certified ssl certificate, you should do the following:

+ On MacOS it is sufficient to enter =https://manny.i-med.ac.at= in Safari (not any other browser!), add an exception and *permanently save the certificate*.
+ On unix, call =echo | openssl s_client -connect manny.i-med.ac.at:443 2>&1 | sed -ne '/-BEGIN CERTIFICATE-/,/-END CERTIFICATE-/p' > manny-cert.pem= save that certificate (=manny-cert.pem=) to some path (.e.g. /~./.certs/). Now we have to configure =git= to accept (actually find) this certificate: add the line =export GIT_SSL_CAPATH=/home/jo/.certs/= (replacing /jo/ with your user name) into your bash profile file.
After that (make shure the =GIT_SSL_CAPATH= environment variable is set) and call =./gitinstall= again.

** Installation of Emacs with org-mode, ess etc

Installation of Emacs and related packages/addons is described in (the git repository) https://manny.i-med.ac.at/jo/memacs.

** Installation of other resources

The git repository https://manny.i-med.ac.at/bioinfo/Ensembl-Exon-probemapping provides additional (mostly perl) scripts for installation of other resources.

+ *Ensembl database*: (Semi)-automatic installation of Ensembl databases, API and sequence files can be performed using the perl script =installEnsemblDB.pl= or =check_update_Ensembl.pl=.

+ *Bowtie or GMAP index files*: building and installation of index files for the short sequence aligners =bowtie= and =gmap= can be performed using the perl script =make_index_ensembl.pl= provided in the git repository above.

*** Installation of GMAP/GSNAP

+ Download the latest GMAP/GSNAP (e.g. =wget http://research-pub.gene.com/gmap/src/gmap-gsnap-2014-05-15.v2.tar.gz=).
+ Configure, compile and install:

#+BEGIN_EXAMPLE

tar -xzf tar -xzf gmap-gsnap-*
cd gmap-2014-05-15
./configure --prefix=/home/bioinfo/gmap
make
make install

#+END_EXAMPLE

Add =/home/bioinfo/gmap/bin= to your =PATH= environment variable.


*** Mirror of CRAN and Bioconductor<<section.mirrror>>

The =perl= script =mirrror.pl= (yes there are three /r/) allows to mirror the main CRAN or Bioconductor repository. Check the help of the function (=perl mirrror.pl -h=).


** Mac related stuff

*** Use the page up and page down key in Terminal

Go to Terminal, Preferences, Settings, Keyboard and search for page up or down (should be indicated by an arrow up with two horizontal bars). Click on =Edit= and type =\033[5~= (eventually type that in an Terminal and copy paste it to the Edit). For page down use =\033[6~=.

*** Define a shortcut to start a new Terminal window

That's taken from http://apple.stackexchange.com/questions/13652/open-new-terminal-window-in-current-space-regardless-of-other-open-terminals-in:

+ Open Automator and at the top of the automator window, enter: /Service receives 'no input' in 'any application'/.
+ In Workflow add /Run applescript/ and type:

#+BEGIN_EXAMPLE
  on run {input, parameters}
  tell application "Terminal"
       do script ""
       activate
  end tell
  return input
  end run

#+END_EXAMPLE

Note, you can add any command you like inti the do script.

+ Save the service as 'Open Terminal'. It should now appear in the services menu.
+ Go to System Preferences, Keyboard, Keyboard Shortcuts, select /services/ in the left hand menu, select the newly created service and define a short cut (e.g. =cmd #=).
+ To start a Terminal with a specific profile add the line =set current settings of selected tab of window 1 to settings set "jo"== below the =do script ""== line.

* Development

Please add your name here if you're contributing in whatever way.

+ Daniel Bindreither
+ Johannes Rainer

** Versions and change log

** TODOs

*** DONE Add scripts to install gsnap/gmap and build index files.
    CLOSED: [2014-06-16 Mon 16:12]
    - State "DONE"       from "TODO"       [2014-06-16 Mon 16:12]
    :PROPERTIES:
    :ID:       545BBCBC-FA11-4099-B180-2E420B376CF3
    :END:

As stated above, it's implemented in the =Ensembl-Exon-probemapping= git repository.
